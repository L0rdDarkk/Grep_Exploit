const header = document.querySelector("header")
window.addEventListener("scroll",function(){
    header.classList.toggle ("sticky",window.scrollY>150);
})



const terminal = new Terminal();
terminal.open(document.getElementById('game-terminal-container'));
terminal.resize(120, 30); 

terminal.write('Welcome to the Linux Terminal!\r\n');
terminal.write('Type "help" to see the available commands.\r\n');
terminal.write('[Grep_Exploit]@linux:~$ ');

// File System 
const fileSystem = {
    '/': {
        type: 'directory',
        contents: {
            'home': {
                type: 'directory',
                contents: {
                    'user': {
                        type: 'directory',
                        contents: {
                            'system': {
                                type: 'directory',
                                contents: {
                                    'system_sec': {
                                        type: 'directory',
                                        contents: {
                                            'grep-1.txt': {
                                                type: 'file',
                                                contents: 'I am sorry this is not the right flag'
                                            },
                                            'notes.txt': {
                                                type: 'file',
                                                contents: 'This is just a random note.'
                                            },
                                            'grep-2.txt': {
                                                type: 'file',
                                                contents: 'I am sorry this is not the right flag'
                                            },
                                            'grep-2.txt': {
                                                type: 'file',
                                                contents: 'I am sorry this is not the right flag'
                                            },
                                            'grep-3.txt': {
                                                type: 'file',
                                                contents: 'Congratulations! You Win FLAG{Grep_Exploit.system}'
                                            },
                                            'grep-4.txt': {
                                                type: 'file',
                                                contents: 'I am sorry this is not the right flag'
                                            },
                                            
                                        }
                                    }
                                }
                            },
                            'readme.txt': {
                                type: 'file',
                                contents: 'This is your home directory. Try to explore around.'
                            }
                        }
                    }
                }
            },
            'etc': {
                type: 'directory',
                contents: {}
            }
        }
    }
};

// Terminal Logic
let currentDirectory = '/';
let currentInput = '';
let isClearActive = false;

terminal.onData((data) => {
    if (data === '\r') {
        
        handleGameCommand(currentInput.trim());
        currentInput = ''; 
        terminal.write('\r\n[Grep_Exploit]@linux:' + currentDirectory + '$ ');
    } else if (data === '\u007F') {
        if (currentInput.length > 0) {
            currentInput = currentInput.slice(0, -1);
            terminal.write('\b \b'); 
        }
    } else if (data === '\x03') {
        currentInput = '';
        terminal.write('\r\n');
    } else {
        if (isClearActive) {
            terminal.write('\x1B[0;0H'); 
            terminal.write('\x1B[J');
            isClearActive = false;
        }
        currentInput += data;
        terminal.write(data); 
    }
});

function handleGameCommand(input) {
    const args = input.split(' ');
    const command = args[0];

    switch (command) {
        case 'ls':
            lsCommand();
            break;
        case 'pwd':
            pwdCommand();
            break;
        case 'cd':
            cdCommand(args[1]);
            break;
        case 'clear':
            clearCommand();
            break;
        case 'grep':
            grepCommand(args[1]);
            break;
        case 'help':
            helpCommand();
            break;
        case 'cat':
            catCommand(args[1]);
            break;
        default:
            terminal.write(`\r\nUnknown command: ${command}\r\n`);
            break;
    }
}

// Implement of the commands

function lsCommand() {
    const contents = getFileSystemContents(currentDirectory);
    terminal.write('\r\n' + Object.keys(contents).join(' ') + '\r\n');
}

function pwdCommand() {
    terminal.write('\r\n' + currentDirectory + '\r\n');
}

function cdCommand(dir) {
    if (!dir || dir === '..') {
        const splitPath = currentDirectory.split('/');
        splitPath.pop();
        currentDirectory = splitPath.length > 1 ? splitPath.join('/') : '/';
    } else if (getFileSystemContents(currentDirectory)[dir] && getFileSystemContents(currentDirectory)[dir].type === 'directory') {
        currentDirectory += currentDirectory === '/' ? dir : '/' + dir;
    } else {
        terminal.write(`\r\ncd: no such file or directory: ${dir}\r\n`);
    }
}

function clearCommand() {
    isClearActive = true;
    terminal.write('\r\n');
}

function grepCommand(keyword) {
    const contents = getFileSystemContents(currentDirectory);
    let found = false;
    for (const file in contents) {
        if (contents[file].type === 'file' && contents[file].contents.includes(keyword)) {
            terminal.write(`\r\n${file}: ${contents[file].contents}\r\n`);
            found = true;
        }
    }
    if (!found) terminal.write(`\r\nNo results found for "${keyword}"\r\n`);
}

function helpCommand() {
    terminal.write('\r\nAvailable commands: ls, pwd, cd, clear, grep, help, cat\r\n');
    terminal.write('Explore the system and find the hidden flag!\r\n');
}

function catCommand(fileName) {
    const contents = getFileSystemContents(currentDirectory);
    if (contents[fileName] && contents[fileName].type === 'file') {
        terminal.write('\r\n' + contents[fileName].contents + '\r\n');
    } else {
        terminal.write(`\r\ncat: ${fileName}: No such file\r\n`);
    }
}

function getFileSystemContents(path) {
    const paths = path.split('/').filter(p => p);
    let current = fileSystem['/'];
    for (const p of paths) {
        if (current && current.contents) {
            current = current.contents[p];
        }
    }
    return current ? current.contents : {};
}
